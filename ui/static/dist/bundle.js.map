{"version":3,"sources":["webpack://fuzzster/./src/errors.js","webpack://fuzzster/./src/validation.js","webpack://fuzzster/./src/config.js","webpack://fuzzster/./src/match.js","webpack://fuzzster/./src/match_results.js","webpack://fuzzster/./src/index.js","webpack://fuzzster/./src/api_documentation.js"],"names":["_toggleMissingMandatoryComponentsAlert","action","mandatoryFieldsDivComponent","document","getElementById","style","display","_toggleBackendServiceErrorAlert","backendServiceErrorDivComponent","DOMUpdateOnBackendServiceError","message","errorMessage","innerHTML","_updateBackendServiceErrorAlert","_mandatoryInputComponents","BaseApiRequestsUrl","consts","ApiDocumentationMarkdownFileLocation","_updateResultsTable","results","htmlResultsTable","container","i","length","async","update_results_table_with_fetched_data","requestId","fetchResult","fetch","headers","method","ok","json","type","statusText","data","url","code","status","fetch_get_lazy_response_results","clearStringsTextarea","elementName","value","clearResultsTable","toggleSubmitButtonWhileLoadingResults","submitButtonElement","submitButtonSpinnerElement","disabled","loadStaticPagesHandler","ApiDocumentationMarkdownContent","text","fetch_api_documentation_markdown","then","e","loadDocumentationErrorAlertComponent","_updateLoadDocumentationErrorAlert","JSON","stringify","inputText","content","showdown","Converter","makeHtml","prepareApiDocumentationContent","catch","window","addEventListener","event","inputValidationErrors","missingMandatoryInputs","missingMandatoryInputComponents","map","item","elementId","componentId","push","componentNameForAlertMessage","_getMissingMandatoryInputs","getInputValidationErrors","components","console","log","inputStringsToMatch","inputStringsToMatchIn","inputMode","otherParam","body","stringsToMatch","stringsToMatchIn","mode","fetch_post_new_request","location","href","createRequestStartFetchingChain","inputValue","table","tr","td","cellValue","getElementsByTagName","textContent","innerText","clipboard","ClipboardJS","on","clearSelection","copyResultsTableToClipboard","filename","csv","rows","querySelectorAll","row","cols","j","join","csvFile","downloadLink","Blob","createElement","download","URL","createObjectURL","appendChild","click","_downloadCSV","downloadResultsTableAsCsv"],"mappings":"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","file":"bundle.js","sourcesContent":["function _toggleMissingMandatoryComponentsAlert(action) {\r\n    let mandatoryFieldsDivComponent = document.getElementById(\"mandatoryFieldsNotFilledAlert\");\r\n\r\n    if (action === \"show\") {\r\n        mandatoryFieldsDivComponent.style.display = \"block\";\r\n    } else if (action === \"hide\") {\r\n        mandatoryFieldsDivComponent.style.display = \"none\";\r\n    }\r\n}\r\n\r\nfunction _toggleBackendServiceErrorAlert(action) {\r\n    let backendServiceErrorDivComponent = document.getElementById(\"backendServiceErrorAlert\");\r\n\r\n    if (action === \"show\") {\r\n        backendServiceErrorDivComponent.style.display = \"block\";\r\n    } else if (action === \"hide\") {\r\n        backendServiceErrorDivComponent.style.display = \"none\";\r\n    }\r\n}\r\n\r\nfunction _toggleLoadDocumentationErrorAlert(action) {\r\n    let backendServiceErrorDivComponent = document.getElementById(\"loadDocumentationErrorAlert\");\r\n\r\n    if (action === \"show\") {\r\n        backendServiceErrorDivComponent.style.display = \"block\";\r\n    } else if (action === \"hide\") {\r\n        backendServiceErrorDivComponent.style.display = \"none\";\r\n    }\r\n}\r\n\r\nfunction _updateLoadDocumentationErrorAlert(errorMessage) {\r\n    let loadDocumentationErrorAlertComponent = document.getElementById(\"loadDocumentationErrorAlert\");\r\n\r\n    loadDocumentationErrorAlertComponent.innerHTML = `Load Documentation error: ${errorMessage}`;\r\n    loadDocumentationErrorAlertComponent.style.display = \"block\";\r\n}\r\n\r\nfunction _updateBackendServiceErrorAlert(errorMessage) {\r\n    let backendServiceErrorDivComponent = document.getElementById(\"backendServiceErrorAlert\");\r\n\r\n    backendServiceErrorDivComponent.innerHTML = `Backend service error: ${errorMessage}`;\r\n    backendServiceErrorDivComponent.style.display = \"block\";\r\n}\r\n\r\nfunction _updateMissingMandatoryComponentsAlert(components) {\r\n    let mandatoryFieldsDivComponent = document.getElementById(\"mandatoryFieldsNotFilledAlert\");\r\n\r\n    mandatoryFieldsDivComponent.innerHTML = `Mandatory fields not filled: ${components}`;\r\n}\r\n\r\nexport function DOMUpdateOnBackendServiceError(message) {\r\n    _updateBackendServiceErrorAlert(message);\r\n    _toggleBackendServiceErrorAlert(\"show\");\r\n}\r\n\r\nexport function DOMUpdateOnLoadDocumentationError(message) {\r\n    _updateLoadDocumentationErrorAlert(message);\r\n    _toggleLoadDocumentationErrorAlert(\"show\");\r\n}\r\n\r\nexport function DOMUpdateOnInputError(message) {\r\n    _updateMissingMandatoryComponentsAlert(message);\r\n    _toggleMissingMandatoryComponentsAlert(\"show\");\r\n}\r\n\r\nexport function hidePreviousErrors() {\r\n    _toggleMissingMandatoryComponentsAlert(\"hide\");\r\n    _toggleBackendServiceErrorAlert(\"hide\");\r\n}\r\n","const _mandatoryInputComponents = [\r\n    {'componentId': 'stringsToMatch', 'componentNameForAlertMessage': '\"strings to match\" textarea'},\r\n    {'componentId': 'stringsToMatchIn', 'componentNameForAlertMessage': '\"strings to match in\" textarea'}\r\n];\r\n\r\nfunction _isValidMandatoryComponent(elementId) {\r\n    let validatedComponent = document.getElementById(elementId);\r\n\r\n    return !(validatedComponent.value.length === 0);\r\n}\r\n\r\nfunction _getMissingMandatoryInputs() {\r\n    let missingMandatoryInputComponents = [];\r\n\r\n    _mandatoryInputComponents.map(item => {\r\n        if (_isValidMandatoryComponent(item.componentId) === false) {\r\n            missingMandatoryInputComponents.push(item.componentNameForAlertMessage);\r\n        }\r\n\r\n    });\r\n\r\n    return missingMandatoryInputComponents;\r\n}\r\n\r\nexport function getInputValidationErrors() {\r\n    let missingMandatoryInputs = _getMissingMandatoryInputs();\r\n\r\n    if (missingMandatoryInputs.length > 0) {\r\n        return missingMandatoryInputs\r\n    }\r\n    return []\r\n}\r\n","export const BaseApiRequestsUrl = 'http://localhost:8080/api/v1/requests/';\r\nexport const ApiDocumentationMarkdownFileLocation = 'http://localhost:8080/api_documentation.md';\r\n\r\nexport const consts = {\r\n    BaseApiRequestsUrl: process.env.BASE_URL,\r\n    ApiDocumentationMarkdownFileLocation: 'http://localhost:8080/api_documentation.md'\r\n}\r\n\r\n","import {BaseApiRequestsUrl, consts} from './config.js';\r\n\r\nfunction _updateResultsTable(results) {\r\n    let htmlResultsTable = '';\r\n    let container = document.getElementById('resultsTableBody');\r\n\r\n    for (let i = 0; i < results.length; i++) {\r\n        let htmlTableRow = `<tr>\r\n                        <td>${results[i][\"StringToMatch\"]}</td>\r\n                        <td>${results[i][\"StringMatched\"]}</td>\r\n                        <td>${results[i][\"Result\"]}</td>\r\n                    </tr>`;\r\n\r\n        htmlResultsTable += htmlTableRow;\r\n    }\r\n\r\n    container.innerHTML += htmlResultsTable;\r\n}\r\n\r\nexport async function fetch_post_new_request() {\r\n    console.log('export consts',consts);\r\n\r\n    const inputStringsToMatch = document.getElementById(\"stringsToMatch\").value;\r\n    const inputStringsToMatchIn = document.getElementById(\"stringsToMatchIn\").value;\r\n    const inputMode = document.getElementById(\"mode\").value;\r\n\r\n    const Data = JSON.stringify({\r\n        stringsToMatch: inputStringsToMatch,\r\n        stringsToMatchIn: inputStringsToMatchIn,\r\n        mode: inputMode\r\n    });\r\n    const otherParam = {\r\n        headers: {\r\n            \"content-type\": \"application/json; charset=UTF-8\"\r\n        },\r\n        body: Data,\r\n        method: \"POST\"\r\n    };\r\n\r\n    const fetchResult = await fetch(BaseApiRequestsUrl, otherParam);\r\n\r\n    if (fetchResult.ok) {\r\n        return await fetchResult.json();\r\n    }\r\n\r\n    throw {\r\n        type: 'Error',\r\n        message: fetchResult.statusText,\r\n        data: fetchResult.url,\r\n        code: fetchResult.status,\r\n    };\r\n}\r\n\r\nexport async function fetch_get_lazy_response_results(requestId) {\r\n    const otherParam = {\r\n        headers: {\r\n            \"content-type\": \"application/json; charset=UTF-8\"\r\n        },\r\n        method: \"GET\"\r\n    };\r\n\r\n    const fetchResult = await fetch(`${BaseApiRequestsUrl}${requestId}/`, otherParam);\r\n\r\n    if (fetchResult.ok) {\r\n        return await fetchResult.json();\r\n    }\r\n\r\n    throw {\r\n        type: 'Error',\r\n        message: fetchResult.statusText,\r\n        data: fetchResult.url,\r\n        code: fetchResult.status,\r\n    };\r\n}\r\n\r\nexport async function update_results_table_with_fetched_data(requestId) {\r\n    let results = await fetch_get_lazy_response_results(requestId);\r\n\r\n    if (results[\"ReturnedAllRows\"] === true) {\r\n        _updateResultsTable(results[\"Results\"]);\r\n\r\n    } else {\r\n        _updateResultsTable(results[\"Results\"]);\r\n        await update_results_table_with_fetched_data(requestId);\r\n    }\r\n}\r\n\r\nexport function clearStringsTextarea(elementName) {\r\n    let TextAreaElement = document.getElementById(elementName);\r\n    TextAreaElement.value = \"\";\r\n}\r\n","function _downloadCSV(csv, filename) {\r\n    let csvFile;\r\n    let downloadLink;\r\n\r\n    csvFile = new Blob([csv], {type: \"text/csv\"});\r\n\r\n    downloadLink = document.createElement(\"a\");\r\n    downloadLink.download = filename;\r\n    downloadLink.href = window.URL.createObjectURL(csvFile);\r\n    downloadLink.style.display = \"none\";\r\n\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n}\r\n\r\nexport function downloadResultsTableAsCsv(filename) {\r\n    let csv = [];\r\n    let rows = document.querySelectorAll(\"table tr\");\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let row = [], cols = rows[i].querySelectorAll(\"td, th\");\r\n\r\n        for (let j = 0; j < cols.length; j++)\r\n            row.push(cols[j].innerText);\r\n\r\n        csv.push(row.join(\",\"));\r\n    }\r\n\r\n    _downloadCSV(csv.join(\"\\n\"), filename);\r\n}\r\n\r\nexport function copyResultsTableToClipboard() {\r\n    let clipboard = new ClipboardJS('.btn');\r\n\r\n    clipboard.on('success', function (e) {\r\n        // console.info('Action:', e.action);\r\n        // console.info('Text:', e.text);\r\n        // console.info('Trigger:', e.trigger);\r\n\r\n        e.clearSelection();\r\n    });\r\n\r\n    clipboard.on('error', function (e) {\r\n        // console.error('Action:', e.action);\r\n        // console.error('Trigger:', e.trigger);\r\n    });\r\n}\r\n\r\nexport function getRangeInputSliderValue() {\r\n    let sliderElement = document.getElementById(\"rangeInput\");\r\n\r\n    return sliderElement.value\r\n}\r\n\r\nexport function clearResultsTable() {\r\n    let container = document.getElementById('resultsTableBody');\r\n\r\n    container.innerHTML = '';\r\n}\r\n\r\nexport function showResultsTable() {\r\n    let resultsDivElement = document.getElementById(\"resultsDiv\");\r\n\r\n    resultsDivElement.style.display = \"block\";\r\n}\r\n\r\nexport function toggleSubmitButtonWhileLoadingResults(action) {\r\n    let submitButtonElement = document.getElementById(\"submitButton\");\r\n    let submitButtonSpinnerElement = document.getElementById(\"submitButtonSpinner\");\r\n\r\n    if (action === \"show\") {\r\n        submitButtonElement.disabled = false;\r\n        submitButtonSpinnerElement.style.display = \"none\";\r\n    } else if (action === \"hide\") {\r\n        submitButtonElement.disabled = true;\r\n        submitButtonSpinnerElement.style.display = \"block\";\r\n    }\r\n}\r\n\r\nexport function jumpToAnchor(anchor) {\r\n    window.location.href = `#${anchor}`;\r\n}\r\n","import {\r\n    DOMUpdateOnBackendServiceError,\r\n    DOMUpdateOnInputError,\r\n    DOMUpdateOnLoadDocumentationError,\r\n    hidePreviousErrors\r\n} from \"./errors.js\";\r\nimport {\r\n    getInputValidationErrors\r\n} from './validation.js';\r\nimport {\r\n    convertMarkdownToHtml,\r\n    fetch_api_documentation_markdown,\r\n    updateApiDocumentationDiv\r\n} from './api_documentation.js';\r\nimport {\r\n    fetch_post_new_request, \r\n    update_results_table_with_fetched_data,\r\n    clearStringsTextarea\r\n} from \"./match.js\";\r\nimport {\r\n    clearResultsTable,\r\n    copyResultsTableToClipboard,\r\n    downloadResultsTableAsCsv,\r\n    getRangeInputSliderValue,\r\n    jumpToAnchor,\r\n    showResultsTable,\r\n    toggleSubmitButtonWhileLoadingResults\r\n} from \"./match_results.js\";\r\n\r\n\r\nfunction loadStaticPagesHandler() {\r\n    async function prepareApiDocumentationContent() {\r\n        let ApiDocumentationMarkdownContent = null;\r\n        try {\r\n            ApiDocumentationMarkdownContent = await fetch_api_documentation_markdown().then();\r\n        } catch (e) {\r\n            DOMUpdateOnLoadDocumentationError(JSON.stringify(e));\r\n            return;\r\n        }\r\n\r\n        let ApiDocumentationHtmlContent = convertMarkdownToHtml(ApiDocumentationMarkdownContent);\r\n\r\n        updateApiDocumentationDiv(ApiDocumentationHtmlContent);\r\n\r\n    }\r\n\r\n    prepareApiDocumentationContent().catch();\r\n\r\n}\r\n\r\nfunction startMatchButtonHandler() {\r\n\r\n    async function createRequestStartFetchingChain() {\r\n        hidePreviousErrors();\r\n        toggleSubmitButtonWhileLoadingResults(\"show\");\r\n\r\n        let inputValidationErrors = getInputValidationErrors();\r\n        if (inputValidationErrors.length > 0) {\r\n            DOMUpdateOnInputError(inputValidationErrors);\r\n            return;\r\n        }\r\n\r\n        let requestId = null;\r\n        try {\r\n            const objectId = await fetch_post_new_request();\r\n            requestId = objectId[\"RequestID\"];\r\n        } catch (e) {\r\n            DOMUpdateOnBackendServiceError(JSON.stringify(e));\r\n            toggleSubmitButtonWhileLoadingResults(\"show\");\r\n            return;\r\n        }\r\n\r\n        toggleSubmitButtonWhileLoadingResults(\"hide\");\r\n        clearResultsTable();\r\n        try {\r\n            await update_results_table_with_fetched_data(requestId);\r\n        } catch (e) {\r\n            DOMUpdateOnBackendServiceError(JSON.stringify(e));\r\n            return;\r\n        }\r\n        showResultsTable();\r\n        toggleSubmitButtonWhileLoadingResults(\"show\");\r\n        jumpToAnchor(\"results\");\r\n\r\n    }\r\n\r\n    createRequestStartFetchingChain().catch();\r\n}\r\n\r\nfunction filterResultsTableButtonHandler() {\r\n    let inputValue, table, tr, td, i, cellValue;\r\n\r\n    inputValue = getRangeInputSliderValue();\r\n\r\n    table = document.getElementById(\"resultsTable\");\r\n    tr = table.getElementsByTagName(\"tr\");\r\n\r\n    for (i = 0; i < tr.length; i++) {\r\n        td = tr[i].getElementsByTagName(\"td\")[2];\r\n        if (td) {\r\n            cellValue = td.textContent || td.innerText;\r\n            if (+cellValue >= +inputValue) {\r\n                tr[i].style.display = \"\";\r\n            } else {\r\n                tr[i].style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction copyResultsToClipboardButtonHandler() {\r\n    copyResultsTableToClipboard()\r\n}\r\n\r\nfunction downloadResultsCSVButtonHandler() {\r\n    downloadResultsTableAsCsv('fuzzy_match_results.csv')\r\n}\r\n\r\nfunction clearResultsButtonHandler() {\r\n    clearResultsTable()\r\n}\r\n\r\nfunction clearStringsToMatchTextareaHandler() {\r\n    clearStringsTextarea(\"stringsToMatch\");\r\n}\r\n\r\nfunction clearStringsToMatchInTextareaHandler() {\r\n    clearStringsTextarea(\"stringsToMatchIn\");\r\n}\r\n\r\n\r\nwindow.addEventListener('load', (event) => {\r\n    loadStaticPagesHandler();\r\n});\r\n\r\nconst matchButton = document.getElementById('submitButton');\r\nmatchButton.addEventListener('click', startMatchButtonHandler);\r\n\r\nconst clearStringsToMatchTextarea = document.getElementById('clearStringsToMatchTextarea');\r\nclearStringsToMatchTextarea.addEventListener('click', clearStringsToMatchTextareaHandler);\r\n\r\nconst clearStringsToMatchInTextarea = document.getElementById('clearStringsToMatchInTextarea');\r\nclearStringsToMatchInTextarea.addEventListener('click', clearStringsToMatchInTextareaHandler);\r\n\r\nconst filterResultsButton = document.getElementById('rangeInput');\r\nfilterResultsButton.addEventListener('change', filterResultsTableButtonHandler);\r\n\r\nconst copyResultsToClipboardButton = document.getElementById('copyResultsTableToClipboardButton');\r\ncopyResultsToClipboardButton.addEventListener('click', copyResultsToClipboardButtonHandler);\r\n\r\nconst downloadResultsToCSVButton = document.getElementById('downloadResultsTableAsCsvButton');\r\ndownloadResultsToCSVButton.addEventListener('click', downloadResultsCSVButtonHandler);\r\n\r\nconst clearResultsTableButton = document.getElementById('clearResultsTableButton');\r\nclearResultsTableButton.addEventListener('click', clearResultsButtonHandler);\r\n","import {ApiDocumentationMarkdownFileLocation} from './config.js';\r\n\r\nexport function convertMarkdownToHtml(inputText) {\r\n    let converter = new showdown.Converter();\r\n    return converter.makeHtml(inputText)\r\n}\r\n\r\nexport function updateApiDocumentationDiv(content) {\r\n    let apiDocumentationDivElement = document.getElementById(\"apiDocumentationDiv\");\r\n\r\n    apiDocumentationDivElement.innerHTML = content;\r\n}\r\n\r\nexport async function fetch_api_documentation_markdown() {\r\n    const fetchResult = await fetch(ApiDocumentationMarkdownFileLocation,);\r\n\r\n    if (fetchResult.ok) {\r\n        return await fetchResult.text();\r\n    }\r\n\r\n    throw {\r\n        type: 'Error',\r\n        message: fetchResult.statusText,\r\n        data: fetchResult.url,\r\n        code: fetchResult.status,\r\n    };\r\n}\r\n"],"sourceRoot":""}